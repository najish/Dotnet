@model IEnumerable<StudentViewModel>
@{
    ViewData["Title"] = "List of all students";
    int page =(int)ViewData["page"];
}

<h1>List of students</h1>


<h5>
    <a asp-action="Add">Create Student</a>
</h5>
<div>
    <form method="get">
        Find By Name : <input type="text" placeholder="Filter Name" name="searchString" value="@ViewData["CurrentFilter"]">
        <input type="submit" value="Search" class="btn btn-success">
    </form>
</div>
<table>
    <thead>
        <tr>
            <th>
                <a asp-action="GetStudents" asp-route-sortOrder="@ViewData["IdSortParm"]">Id</a>
            </th>
            <th>
                <a asp-action="GetStudents" asp-route-sortOrder="@ViewData["NameSortParm"]">Name</a>
            </th>
            <th>
                <a asp-action="GetStudents" asp-route-sortOrder="@ViewData["AddressSortParm"]">Address</a>
                
            </th>
        </tr>
    </thead>
    <tbody>
        @if(Model.Any())
        {
            @foreach(var student in Model)
            {
                <tr>
                    <td>@student.Id</td>
                    <td>@student.Name</td>
                    <td>@student.Address</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@student.Id">Edit</a> |
                        <a asp-action="Delete" asp-route-id="@student.Id">Delete</a>
                    </td>
                </tr>
            }

            
        }
        else
        {
            <h6>Don't have any student records.</h6>
        }

    </tbody>
</table>


<div>
    <a class="btn btn-primary" asp-action="GetStudents" asp-route-page="@(page-1)">@(page - 1)</a>
    <a class="btn btn-success" asp-action="GetStudents" asp-route-page="@(page)">@(page)</a>
    <a class="btn btn-primary" asp-action="GetStudents" asp-route-page="@(page+1)">@(page + 1)</a>
</div>



<div>
    <h1>Hello There</h1>
</div>